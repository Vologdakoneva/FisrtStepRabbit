@page
@using NonFactors.Mvc.Grid;
@model Log
<script type="text/javascript">
    //alert('sd');
    //debugger;
    //window.onload = onloaded;
    //function onloaded() {
        const grid = document.querySelector(".mvc-grid");
        //debugger;
        // alert('sd');
        // Triggered when grid's row is clicked. It's recommended to use event delegation in ajax scenarios.
        //document.addEventListener("rowclick", e => {
            //e.detail.data - clicked row's data from columns.
            //e.detail.grid - grid's instance.
       // debugger;
         //   alert('sd');
            //e.detail.originalEvent - original tr click event which triggered the rowclick.
        });
    //}
</script>

@{
    ViewData["Title"] = "Лог";
}
<link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet">
<style>
    .working {
        background-color: #ecffec;
    }
</style>


<h1>@ViewData["Title"]</h1>

<p>Состояние обмена.</p>
@if (Model == null)
{
     <label>"Загрузка"</label>
}


@if (Model != null)
{ 
@(Html
    .Grid(Model.ErrorPerson)
    .Build(columns =>
    {
@*        columns.Add(model => model.successfully).Titled("Успешно")
                .RenderedAs(model => model.successfully == true ?
                    Html.Raw("<input type='checkbox' onclick='return false' name='Input.SelectedAccessRightsIds' value='" + model.IDALL + "' checked />")
                       : Html.Raw("<input type='checkbox' onclick='return false' name='Input.SelectedAccessRightsIds' value='" + model.IDALL + "' />"));
*@        columns.Add(model => model.ErrorSource).Titled("Источник");
        columns.Add(model => model.ErrorText).Titled("Ошибка");
        columns.Add(model => model.DataError).Titled("Дата");
        columns.Add(model => model.PersonLink).Titled("");

    })
    .Using(GridFilterMode.Header)
    .Empty("Нет данных")
    .Filterable()
    .Sortable()
                                                        .Pageable(pager =>
                                                    {
                                                        pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 5, "5" }, { 10, "10" }, { 50, "50" } };
                                                        pager.ShowPageSizes = false;
                                                        pager.PagesToDisplay = 4;
                                                        pager.CurrentPage = 1;
                                                        pager.RowsPerPage = 10;
                                                    })
)

}
<script type="text/javascript" src="~/js/mvc-grid/mvc-grid_rus.js"></script>
<script type="text/javascript">
    document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
</script>
